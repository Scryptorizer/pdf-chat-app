{"ast":null,"code":"var _jsxFileName = \"/Users/willfernandez/pdf-chat-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [conversations, setConversations] = useState(() => {\n    const id = Math.random().toString(36).substring(2, 15);\n    return [id];\n  });\n  const [activeConversationId, setActiveConversationId] = useState(() => conversations[0]);\n  const [conversationMessages, setConversationMessages] = useState(() => ({\n    [conversations[0]]: []\n  }));\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(true);\n  const [tokenStats, setTokenStats] = useState({\n    total_messages: 0,\n    total_conversations: 0\n  });\n  const messagesEndRef = useRef(null);\n  const currentMessages = conversationMessages[activeConversationId] || [];\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentMessages]);\n  const fetchTokenStats = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/usage/tokens');\n      if (response.ok) {\n        const stats = await response.json();\n        setTokenStats(stats);\n      }\n    } catch (error) {\n      console.warn('Failed to fetch token stats:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTokenStats();\n    const interval = setInterval(fetchTokenStats, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const addMessage = (content, role) => {\n    const newMessage = {\n      id: Math.random().toString(36).substring(2, 15),\n      content,\n      role,\n      timestamp: new Date()\n    };\n    setConversationMessages(prev => ({\n      ...prev,\n      [activeConversationId]: [...(prev[activeConversationId] || []), newMessage]\n    }));\n    return newMessage.id;\n  };\n  const updateLastMessage = content => {\n    setConversationMessages(prev => {\n      const currentMessages = prev[activeConversationId] || [];\n      if (currentMessages.length > 0) {\n        const updatedMessages = [...currentMessages];\n        updatedMessages[updatedMessages.length - 1] = {\n          ...updatedMessages[updatedMessages.length - 1],\n          content\n        };\n        return {\n          ...prev,\n          [activeConversationId]: updatedMessages\n        };\n      }\n      return prev;\n    });\n  };\n  const createNewConversation = () => {\n    const newId = Math.random().toString(36).substring(2, 15);\n    setConversations(prev => [...prev, newId]);\n    setActiveConversationId(newId);\n    setConversationMessages(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n  const switchConversation = conversationId => {\n    setActiveConversationId(conversationId);\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = inputValue.trim();\n    setInputValue('');\n    setIsLoading(true);\n    addMessage(userMessage, 'user');\n    try {\n      var _response$body;\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          conversation_id: activeConversationId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n      if (!reader) {\n        throw new Error('No response body reader available');\n      }\n      let assistantMessageId = null;\n      let accumulatedContent = '';\n      const decoder = new TextDecoder();\n      let buffer = '';\n      try {\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            setIsLoading(false);\n            break;\n          }\n          buffer += decoder.decode(value, {\n            stream: true\n          });\n          const lines = buffer.split('\\n');\n\n          // Keep the last line in buffer (might be incomplete)\n          buffer = lines.pop() || '';\n          for (const line of lines) {\n            if (line.includes('{\"type\":')) {\n              try {\n                // Find the JSON part (skip any \"data:\" prefixes)\n                const jsonStart = line.indexOf('{\"type\":');\n                const jsonStr = line.substring(jsonStart).trim();\n                if (!jsonStr) continue;\n                const data = JSON.parse(jsonStr);\n                if (data.type === 'content' && data.content) {\n                  accumulatedContent += data.content;\n                  if (!assistantMessageId) {\n                    assistantMessageId = addMessage(accumulatedContent, 'assistant');\n                  } else {\n                    updateLastMessage(accumulatedContent);\n                  }\n                } else if (data.type === 'done') {\n                  setIsLoading(false);\n                  return;\n                }\n              } catch (parseError) {\n                console.error('Error parsing SSE data:', parseError);\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Check if it's a rate limit error\n      if (error instanceof Error && error.message.includes('429')) {\n        addMessage('🚦 Whoa, slow down there! You\\'ve hit the rate limit (10 messages per minute). Take a coffee break and try again in a minute! ☕', 'assistant');\n      } else {\n        addMessage('Sorry, I encountered a connection error. Please try again.', 'assistant');\n      }\n      setIsLoading(false);\n      setIsConnected(false);\n\n      // Try to reconnect after a delay\n      setTimeout(() => {\n        setIsConnected(true);\n      }, 3000);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const clearConversation = async () => {\n    try {\n      // Call backend to clear conversation\n      await fetch(`http://localhost:8000/api/conversations/${activeConversationId}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.warn('Failed to clear conversation on backend:', error);\n    }\n    setConversationMessages(prev => ({\n      ...prev,\n      [activeConversationId]: []\n    }));\n  };\n  const trySampleQuestion = question => {\n    setInputValue(question);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PDF Chat Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ask questions about accessible travel laws and regulations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? '🟢 Connected' : '🔴 Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"token-stats\",\n          children: [\"\\uD83D\\uDCCA Messages: \", tokenStats.total_messages, \" | Conversations: \", tokenStats.total_conversations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNewConversation,\n          className: \"clear-button\",\n          children: \"\\u2795 New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearConversation,\n          className: \"clear-button\",\n          disabled: currentMessages.length === 0,\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), conversations.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-tabs\",\n      children: conversations.map((convId, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchConversation(convId),\n        className: `conversation-tab ${convId === activeConversationId ? 'active' : ''}`,\n        children: [\"Chat \", index + 1]\n      }, convId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [currentMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDC4B Welcome!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I'm here to answer questions about accessible travel laws and regulations based on the loaded PDF document.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sample-questions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Try asking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [\"What is the ADA?\", \"Tell me about accessibility laws in Canada\", \"How many people globally have disabilities?\", \"What does the document say about transportation?\"].map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => trySampleQuestion(question),\n                children: [\"\\\"\", question, \"\\\"\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this) : currentMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-role\",\n              children: message.role === 'user' ? '👤 You' : '🤖 Assistant'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: message.role === 'assistant' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this) : message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant-message loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-role\",\n              children: \"\\uD83E\\uDD16 Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: \"typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask a question about accessible travel...\",\n            disabled: isLoading || !isConnected,\n            rows: 1,\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            disabled: !inputValue.trim() || isLoading || !isConnected,\n            className: \"send-button\",\n            children: isLoading ? '⏳' : '📤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-hint\",\n          children: [\"Press Enter to send, Shift+Enter for new line\", !isConnected && ' • Backend connection lost']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zwfmW/tATuyUZwqDB0tI11tmETQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","conversations","setConversations","id","Math","random","toString","substring","activeConversationId","setActiveConversationId","conversationMessages","setConversationMessages","inputValue","setInputValue","isLoading","setIsLoading","isConnected","setIsConnected","tokenStats","setTokenStats","total_messages","total_conversations","messagesEndRef","currentMessages","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchTokenStats","response","fetch","ok","stats","json","error","console","warn","interval","setInterval","clearInterval","addMessage","content","role","newMessage","timestamp","Date","prev","updateLastMessage","length","updatedMessages","createNewConversation","newId","switchConversation","conversationId","handleSendMessage","trim","userMessage","_response$body","method","headers","body","JSON","stringify","message","conversation_id","Error","status","reader","getReader","assistantMessageId","accumulatedContent","decoder","TextDecoder","buffer","done","value","read","decode","stream","lines","split","pop","line","includes","jsonStart","indexOf","jsonStr","data","parse","type","parseError","releaseLock","setTimeout","handleKeyPress","e","key","shiftKey","preventDefault","clearConversation","trySampleQuestion","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","convId","index","toLocaleTimeString","ref","onChange","target","onKeyPress","placeholder","rows","_c","$RefreshReg$"],"sources":["/Users/willfernandez/pdf-chat-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport ReactMarkdown from 'react-markdown';\n\ninterface Message {\n  id: string;\n  content: string;\n  role: 'user' | 'assistant';\n  timestamp: Date;\n}\n\ninterface StreamResponse {\n  type: 'content' | 'error' | 'done';\n  content?: string;\n  conversation_id?: string;\n  message_id?: string;\n}\n\nconst App: React.FC = () => {\n  const [conversations, setConversations] = useState(() => {\n    const id = Math.random().toString(36).substring(2, 15);\n    return [id];\n  });\n  const [activeConversationId, setActiveConversationId] = useState(() => conversations[0]);\n  const [conversationMessages, setConversationMessages] = useState<{[key: string]: Message[]}>(() => ({\n    [conversations[0]]: []\n  }));\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(true);\n  const [tokenStats, setTokenStats] = useState({ total_messages: 0, total_conversations: 0 });\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const currentMessages = conversationMessages[activeConversationId] || [];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentMessages]);\n\n  const fetchTokenStats = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/usage/tokens');\n      if (response.ok) {\n        const stats = await response.json();\n        setTokenStats(stats);\n      }\n    } catch (error) {\n      console.warn('Failed to fetch token stats:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTokenStats();\n    const interval = setInterval(fetchTokenStats, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const addMessage = (content: string, role: 'user' | 'assistant') => {\n    const newMessage: Message = {\n      id: Math.random().toString(36).substring(2, 15),\n      content,\n      role,\n      timestamp: new Date()\n    };\n    \n    setConversationMessages(prev => ({\n      ...prev,\n      [activeConversationId]: [...(prev[activeConversationId] || []), newMessage]\n    }));\n    \n    return newMessage.id;\n  };\n\n  const updateLastMessage = (content: string) => {\n    setConversationMessages(prev => {\n      const currentMessages = prev[activeConversationId] || [];\n      if (currentMessages.length > 0) {\n        const updatedMessages = [...currentMessages];\n        updatedMessages[updatedMessages.length - 1] = {\n          ...updatedMessages[updatedMessages.length - 1],\n          content\n        };\n        return {\n          ...prev,\n          [activeConversationId]: updatedMessages\n        };\n      }\n      return prev;\n    });\n  };\n\n  const createNewConversation = () => {\n    const newId = Math.random().toString(36).substring(2, 15);\n    setConversations(prev => [...prev, newId]);\n    setActiveConversationId(newId);\n    setConversationMessages(prev => ({\n      ...prev,\n      [newId]: []\n    }));\n  };\n\n  const switchConversation = (conversationId: string) => {\n    setActiveConversationId(conversationId);\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n  \n    const userMessage = inputValue.trim();\n    setInputValue('');\n    setIsLoading(true);\n  \n    addMessage(userMessage, 'user');\n  \n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          conversation_id: activeConversationId\n        })\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n  \n      const reader = response.body?.getReader();\n      if (!reader) {\n        throw new Error('No response body reader available');\n      }\n  \n      let assistantMessageId: string | null = null;\n      let accumulatedContent = '';\n      const decoder = new TextDecoder();\n  \n      let buffer = '';\n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          \n          if (done) {\n            setIsLoading(false);\n            break;\n          }\n\n          buffer += decoder.decode(value, { stream: true });\n          const lines = buffer.split('\\n');\n          \n          // Keep the last line in buffer (might be incomplete)\n          buffer = lines.pop() || '';\n\n          for (const line of lines) {\n            if (line.includes('{\"type\":')) {\n              try {\n                // Find the JSON part (skip any \"data:\" prefixes)\n                const jsonStart = line.indexOf('{\"type\":');\n                const jsonStr = line.substring(jsonStart).trim();\n                if (!jsonStr) continue;\n                const data = JSON.parse(jsonStr);\n                \n                if (data.type === 'content' && data.content) {\n                  accumulatedContent += data.content;\n                  \n                  if (!assistantMessageId) {\n                    assistantMessageId = addMessage(accumulatedContent, 'assistant');\n                  } else {\n                    updateLastMessage(accumulatedContent);\n                  }\n                } else if (data.type === 'done') {\n                  setIsLoading(false);\n                  return;\n                }\n              } catch (parseError) {\n                console.error('Error parsing SSE data:', parseError);\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n  \n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Check if it's a rate limit error\n      if (error instanceof Error && error.message.includes('429')) {\n        addMessage('🚦 Whoa, slow down there! You\\'ve hit the rate limit (10 messages per minute). Take a coffee break and try again in a minute! ☕', 'assistant');\n      } else {\n        addMessage('Sorry, I encountered a connection error. Please try again.', 'assistant');\n      }\n      \n      setIsLoading(false);\n      setIsConnected(false);\n      \n      // Try to reconnect after a delay\n      setTimeout(() => {\n        setIsConnected(true);\n      }, 3000);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const clearConversation = async () => {\n    try {\n      // Call backend to clear conversation\n      await fetch(`http://localhost:8000/api/conversations/${activeConversationId}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.warn('Failed to clear conversation on backend:', error);\n    }\n    \n    setConversationMessages(prev => ({\n      ...prev,\n      [activeConversationId]: []\n    }));\n  };\n\n  const trySampleQuestion = (question: string) => {\n    setInputValue(question);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>PDF Chat Assistant</h1>\n        <p>Ask questions about accessible travel laws and regulations</p>\n        <div className=\"header-controls\">\n          <span className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? '🟢 Connected' : '🔴 Disconnected'}\n          </span>\n          <span className=\"token-stats\">\n            📊 Messages: {tokenStats.total_messages} | Conversations: {tokenStats.total_conversations}\n          </span>\n          <button \n            onClick={createNewConversation}\n            className=\"clear-button\"\n          >\n            ➕ New Chat\n          </button>\n          <button \n            onClick={clearConversation}\n            className=\"clear-button\"\n            disabled={currentMessages.length === 0}\n          >\n            🗑️ Clear\n          </button>\n        </div>\n      </header>\n\n      {conversations.length > 1 && (\n        <div className=\"conversation-tabs\">\n          {conversations.map((convId, index) => (\n            <button\n              key={convId}\n              onClick={() => switchConversation(convId)}\n              className={`conversation-tab ${convId === activeConversationId ? 'active' : ''}`}\n            >\n              Chat {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n\n      <main className=\"chat-container\">\n        <div className=\"messages-container\">\n          {currentMessages.length === 0 ? (\n            <div className=\"welcome-message\">\n              <h2>👋 Welcome!</h2>\n              <p>I'm here to answer questions about accessible travel laws and regulations based on the loaded PDF document.</p>\n              <div className=\"sample-questions\">\n                <p><strong>Try asking:</strong></p>\n                <ul>\n                  {[\n                    \"What is the ADA?\",\n                    \"Tell me about accessibility laws in Canada\",\n                    \"How many people globally have disabilities?\",\n                    \"What does the document say about transportation?\"\n                  ].map((question, index) => (\n                    <li key={index} onClick={() => trySampleQuestion(question)}>\n                      \"{question}\"\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ) : (\n            currentMessages.map((message) => (\n              <div\n                key={message.id}\n                className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}\n              >\n                <div className=\"message-header\">\n                  <span className=\"message-role\">\n                    {message.role === 'user' ? '👤 You' : '🤖 Assistant'}\n                  </span>\n                  <span className=\"message-time\">\n                    {message.timestamp.toLocaleTimeString()}\n                  </span>\n                </div>\n                <div className=\"message-content\">\n                  {message.role === 'assistant' ? (\n                    <ReactMarkdown>{message.content}</ReactMarkdown>\n                  ) : (\n                    message.content\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n          \n          {isLoading && (\n            <div className=\"message assistant-message loading\">\n              <div className=\"message-header\">\n                <span className=\"message-role\">🤖 Assistant</span>\n                <span className=\"message-time\">typing...</span>\n              </div>\n              <div className=\"message-content\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n\n        <div className=\"input-container\">\n          <div className=\"input-wrapper\">\n            <textarea\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Ask a question about accessible travel...\"\n              disabled={isLoading || !isConnected}\n              rows={1}\n              className=\"message-input\"\n            />\n            <button\n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isLoading || !isConnected}\n              className=\"send-button\"\n            >\n              {isLoading ? '⏳' : '📤'}\n            </button>\n          </div>\n          <div className=\"input-hint\">\n            Press Enter to send, Shift+Enter for new line\n            {!isConnected && ' • Backend connection lost'}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}