{"ast":null,"code":"var _jsxFileName = \"/Users/willfernandez/pdf-chat-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [conversationMessages, setConversationMessages] = useState({\n    [conversationId]: []\n  });\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationId] = useState(() => Math.random().toString(36).substring(2, 15));\n  const [isConnected, setIsConnected] = useState(true);\n  const [tokenStats, setTokenStats] = useState({\n    total_messages: 0,\n    total_conversations: 0\n  });\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const fetchTokenStats = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/usage/tokens');\n      if (response.ok) {\n        const stats = await response.json();\n        setTokenStats(stats);\n      }\n    } catch (error) {\n      console.warn('Failed to fetch token stats:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTokenStats();\n    const interval = setInterval(fetchTokenStats, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const addMessage = (content, role) => {\n    const newMessage = {\n      id: Math.random().toString(36).substring(2, 15),\n      content,\n      role,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    return newMessage.id;\n  };\n  const updateLastMessage = content => {\n    setMessages(prev => {\n      const newMessages = [...prev];\n      if (newMessages.length > 0) {\n        newMessages[newMessages.length - 1] = {\n          ...newMessages[newMessages.length - 1],\n          content\n        };\n      }\n      return newMessages;\n    });\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = inputValue.trim();\n    setInputValue('');\n    setIsLoading(true);\n    addMessage(userMessage, 'user');\n    try {\n      var _response$body;\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          conversation_id: conversationId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n      if (!reader) {\n        throw new Error('No response body reader available');\n      }\n      let assistantMessageId = null;\n      let accumulatedContent = '';\n      const decoder = new TextDecoder();\n      let buffer = '';\n      try {\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            setIsLoading(false);\n            break;\n          }\n          buffer += decoder.decode(value, {\n            stream: true\n          });\n          const lines = buffer.split('\\n');\n\n          // Keep the last line in buffer (might be incomplete)\n          buffer = lines.pop() || '';\n          for (const line of lines) {\n            if (line.includes('{\"type\":')) {\n              try {\n                // Find the JSON part (skip any \"data:\" prefixes)\n                const jsonStart = line.indexOf('{\"type\":');\n                const jsonStr = line.substring(jsonStart).trim();\n                if (!jsonStr) continue;\n                const data = JSON.parse(jsonStr);\n                if (data.type === 'content' && data.content) {\n                  accumulatedContent += data.content;\n                  if (!assistantMessageId) {\n                    assistantMessageId = addMessage(accumulatedContent, 'assistant');\n                  } else {\n                    updateLastMessage(accumulatedContent);\n                  }\n                } else if (data.type === 'done') {\n                  setIsLoading(false);\n                  return;\n                }\n              } catch (parseError) {\n                console.error('Error parsing SSE data:', parseError);\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Check if it's a rate limit error\n      if (error instanceof Error && error.message.includes('429')) {\n        addMessage('🚦 Whoa, slow down there! You\\'ve hit the rate limit (10 messages per minute). Take a coffee break and try again in a minute! ☕', 'assistant');\n      } else {\n        addMessage('Sorry, I encountered a connection error. Please try again.', 'assistant');\n      }\n      setIsLoading(false);\n      setIsConnected(false);\n\n      // Try to reconnect after a delay\n      setTimeout(() => {\n        setIsConnected(true);\n      }, 3000);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const clearConversation = async () => {\n    try {\n      // Call backend to clear conversation\n      await fetch(`http://localhost:8000/api/conversations/${conversationId}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.warn('Failed to clear conversation on backend:', error);\n    }\n    setMessages([]);\n  };\n  const trySampleQuestion = question => {\n    setInputValue(question);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PDF Chat Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ask questions about accessible travel laws and regulations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? '🟢 Connected' : '🔴 Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"token-stats\",\n          children: [\"\\uD83D\\uDCCA Messages: \", tokenStats.total_messages, \" | Conversations: \", tokenStats.total_conversations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearConversation,\n          className: \"clear-button\",\n          disabled: messages.length === 0,\n          children: \"Clear Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDC4B Welcome!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I'm here to answer questions about accessible travel laws and regulations based on the loaded PDF document.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sample-questions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Try asking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [\"What is the ADA?\", \"Tell me about accessibility laws in Canada\", \"How many people globally have disabilities?\", \"What does the document say about transportation?\"].map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => trySampleQuestion(question),\n                children: [\"\\\"\", question, \"\\\"\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-role\",\n              children: message.role === 'user' ? '👤 You' : '🤖 Assistant'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: message.role === 'assistant' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this) : message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant-message loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-role\",\n              children: \"\\uD83E\\uDD16 Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: \"typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask a question about accessible travel...\",\n            disabled: isLoading || !isConnected,\n            rows: 1,\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            disabled: !inputValue.trim() || isLoading || !isConnected,\n            className: \"send-button\",\n            children: isLoading ? '⏳' : '📤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-hint\",\n          children: [\"Press Enter to send, Shift+Enter for new line\", !isConnected && ' • Backend connection lost']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RrRJSPfooCqnZt+94mEIYKBHcOg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","conversationMessages","setConversationMessages","conversationId","inputValue","setInputValue","isLoading","setIsLoading","Math","random","toString","substring","isConnected","setIsConnected","tokenStats","setTokenStats","total_messages","total_conversations","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","messages","fetchTokenStats","response","fetch","ok","stats","json","error","console","warn","interval","setInterval","clearInterval","addMessage","content","role","newMessage","id","timestamp","Date","setMessages","prev","updateLastMessage","newMessages","length","handleSendMessage","trim","userMessage","_response$body","method","headers","body","JSON","stringify","message","conversation_id","Error","status","reader","getReader","assistantMessageId","accumulatedContent","decoder","TextDecoder","buffer","done","value","read","decode","stream","lines","split","pop","line","includes","jsonStart","indexOf","jsonStr","data","parse","type","parseError","releaseLock","setTimeout","handleKeyPress","e","key","shiftKey","preventDefault","clearConversation","trySampleQuestion","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","index","toLocaleTimeString","ref","onChange","target","onKeyPress","placeholder","rows","_c","$RefreshReg$"],"sources":["/Users/willfernandez/pdf-chat-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport ReactMarkdown from 'react-markdown';\n\ninterface Message {\n  id: string;\n  content: string;\n  role: 'user' | 'assistant';\n  timestamp: Date;\n}\n\ninterface StreamResponse {\n  type: 'content' | 'error' | 'done';\n  content?: string;\n  conversation_id?: string;\n  message_id?: string;\n}\n\nconst App: React.FC = () => {\n  const [conversationMessages, setConversationMessages] = useState<{[key: string]: Message[]}>({ [conversationId]: [] });\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationId] = useState(() => \n    Math.random().toString(36).substring(2, 15)\n  );\n  const [isConnected, setIsConnected] = useState(true);\n  const [tokenStats, setTokenStats] = useState({ total_messages: 0, total_conversations: 0 });\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const fetchTokenStats = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/usage/tokens');\n      if (response.ok) {\n        const stats = await response.json();\n        setTokenStats(stats);\n      }\n    } catch (error) {\n      console.warn('Failed to fetch token stats:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTokenStats();\n    const interval = setInterval(fetchTokenStats, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const addMessage = (content: string, role: 'user' | 'assistant') => {\n    const newMessage: Message = {\n      id: Math.random().toString(36).substring(2, 15),\n      content,\n      role,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    return newMessage.id;\n  };\n\n  const updateLastMessage = (content: string) => {\n    setMessages(prev => {\n      const newMessages = [...prev];\n      if (newMessages.length > 0) {\n        newMessages[newMessages.length - 1] = {\n          ...newMessages[newMessages.length - 1],\n          content\n        };\n      }\n      return newMessages;\n    });\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n  \n    const userMessage = inputValue.trim();\n    setInputValue('');\n    setIsLoading(true);\n  \n    addMessage(userMessage, 'user');\n  \n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          conversation_id: conversationId\n        })\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n  \n      const reader = response.body?.getReader();\n      if (!reader) {\n        throw new Error('No response body reader available');\n      }\n  \n      let assistantMessageId: string | null = null;\n      let accumulatedContent = '';\n      const decoder = new TextDecoder();\n  \n      let buffer = '';\n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          \n          if (done) {\n            setIsLoading(false);\n            break;\n          }\n\n          buffer += decoder.decode(value, { stream: true });\n          const lines = buffer.split('\\n');\n          \n          // Keep the last line in buffer (might be incomplete)\n          buffer = lines.pop() || '';\n\n          for (const line of lines) {\n            if (line.includes('{\"type\":')) {\n              try {\n                // Find the JSON part (skip any \"data:\" prefixes)\n                const jsonStart = line.indexOf('{\"type\":');\n                const jsonStr = line.substring(jsonStart).trim();\n                if (!jsonStr) continue;\n                const data = JSON.parse(jsonStr);\n                \n                if (data.type === 'content' && data.content) {\n                  accumulatedContent += data.content;\n                  \n                  if (!assistantMessageId) {\n                    assistantMessageId = addMessage(accumulatedContent, 'assistant');\n                  } else {\n                    updateLastMessage(accumulatedContent);\n                  }\n                } else if (data.type === 'done') {\n                  setIsLoading(false);\n                  return;\n                }\n              } catch (parseError) {\n                console.error('Error parsing SSE data:', parseError);\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n  \n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Check if it's a rate limit error\n      if (error instanceof Error && error.message.includes('429')) {\n        addMessage('🚦 Whoa, slow down there! You\\'ve hit the rate limit (10 messages per minute). Take a coffee break and try again in a minute! ☕', 'assistant');\n      } else {\n        addMessage('Sorry, I encountered a connection error. Please try again.', 'assistant');\n      }\n      \n      setIsLoading(false);\n      setIsConnected(false);\n      \n      // Try to reconnect after a delay\n      setTimeout(() => {\n        setIsConnected(true);\n      }, 3000);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const clearConversation = async () => {\n    try {\n      // Call backend to clear conversation\n      await fetch(`http://localhost:8000/api/conversations/${conversationId}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.warn('Failed to clear conversation on backend:', error);\n    }\n    \n    setMessages([]);\n  };\n\n  const trySampleQuestion = (question: string) => {\n    setInputValue(question);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>PDF Chat Assistant</h1>\n        <p>Ask questions about accessible travel laws and regulations</p>\n        <div className=\"header-controls\">\n          <span className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? '🟢 Connected' : '🔴 Disconnected'}\n          </span>\n          <span className=\"token-stats\">\n            📊 Messages: {tokenStats.total_messages} | Conversations: {tokenStats.total_conversations}\n          </span>\n          <button \n            onClick={clearConversation}\n            className=\"clear-button\"\n            disabled={messages.length === 0}\n          >\n            Clear Chat\n          </button>\n        </div>\n      </header>\n\n      <main className=\"chat-container\">\n        <div className=\"messages-container\">\n          {messages.length === 0 ? (\n            <div className=\"welcome-message\">\n              <h2>👋 Welcome!</h2>\n              <p>I'm here to answer questions about accessible travel laws and regulations based on the loaded PDF document.</p>\n              <div className=\"sample-questions\">\n                <p><strong>Try asking:</strong></p>\n                <ul>\n                  {[\n                    \"What is the ADA?\",\n                    \"Tell me about accessibility laws in Canada\",\n                    \"How many people globally have disabilities?\",\n                    \"What does the document say about transportation?\"\n                  ].map((question, index) => (\n                    <li key={index} onClick={() => trySampleQuestion(question)}>\n                      \"{question}\"\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ) : (\n            messages.map((message) => (\n              <div\n                key={message.id}\n                className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}\n              >\n                <div className=\"message-header\">\n                  <span className=\"message-role\">\n                    {message.role === 'user' ? '👤 You' : '🤖 Assistant'}\n                  </span>\n                  <span className=\"message-time\">\n                    {message.timestamp.toLocaleTimeString()}\n                  </span>\n                </div>\n                <div className=\"message-content\">\n                  {message.role === 'assistant' ? (\n                    <ReactMarkdown>{message.content}</ReactMarkdown>\n                  ) : (\n                    message.content\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n          \n          {isLoading && (\n            <div className=\"message assistant-message loading\">\n              <div className=\"message-header\">\n                <span className=\"message-role\">🤖 Assistant</span>\n                <span className=\"message-time\">typing...</span>\n              </div>\n              <div className=\"message-content\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n\n        <div className=\"input-container\">\n          <div className=\"input-wrapper\">\n            <textarea\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Ask a question about accessible travel...\"\n              disabled={isLoading || !isConnected}\n              rows={1}\n              className=\"message-input\"\n            />\n            <button\n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isLoading || !isConnected}\n              className=\"send-button\"\n            >\n              {isLoading ? '⏳' : '📤'}\n            </button>\n          </div>\n          <div className=\"input-hint\">\n            Press Enter to send, Shift+Enter for new line\n            {!isConnected && ' • Backend connection lost'}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}