{"ast":null,"code":"var _jsxFileName = \"/Users/willfernandez/pdf-chat-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationId] = useState(() => Math.random().toString(36).substring(2, 15));\n  const [isConnected, setIsConnected] = useState(true);\n  const messagesEndRef = useRef(null);\n  const currentEventSourceRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (currentEventSourceRef.current) {\n        currentEventSourceRef.current.close();\n      }\n    };\n  }, []);\n  const addMessage = (content, role) => {\n    const newMessage = {\n      id: Math.random().toString(36).substring(2, 15),\n      content,\n      role,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    return newMessage.id;\n  };\n  const updateLastMessage = content => {\n    setMessages(prev => {\n      const newMessages = [...prev];\n      if (newMessages.length > 0) {\n        newMessages[newMessages.length - 1] = {\n          ...newMessages[newMessages.length - 1],\n          content\n        };\n      }\n      return newMessages;\n    });\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = inputValue.trim();\n    setInputValue('');\n    setIsLoading(true);\n    addMessage(userMessage, 'user');\n    try {\n      var _response$body;\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          conversation_id: conversationId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n      if (!reader) {\n        throw new Error('No response body reader available');\n      }\n      let assistantMessageId = null;\n      let accumulatedContent = '';\n      const decoder = new TextDecoder();\n      try {\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            setIsLoading(false);\n            break;\n          }\n          const chunk = decoder.decode(value, {\n            stream: true\n          });\n          const lines = chunk.split('\\n');\n          for (const line of lines) {\n            if (line.startsWith('data: ')) {\n              try {\n                const data = JSON.parse(line.slice(6));\n                if (data.type === 'content' && data.content) {\n                  accumulatedContent += data.content;\n                  if (!assistantMessageId) {\n                    assistantMessageId = addMessage(accumulatedContent, 'assistant');\n                  } else {\n                    updateLastMessage(accumulatedContent);\n                  }\n                } else if (data.type === 'done') {\n                  setIsLoading(false);\n                  return;\n                }\n              } catch (parseError) {\n                console.error('Error parsing SSE data:', parseError);\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      addMessage('Sorry, I encountered a connection error.', 'assistant');\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const clearConversation = async () => {\n    try {\n      // Call backend to clear conversation\n      await fetch(`http://localhost:8000/api/conversations/${conversationId}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.warn('Failed to clear conversation on backend:', error);\n    }\n    setMessages([]);\n  };\n  const trySampleQuestion = question => {\n    setInputValue(question);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PDF Chat Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ask questions about accessible travel laws and regulations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? '🟢 Connected' : '🔴 Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearConversation,\n          className: \"clear-button\",\n          disabled: messages.length === 0,\n          children: \"Clear Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDC4B Welcome!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I'm here to answer questions about accessible travel laws and regulations based on the loaded PDF document.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sample-questions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Try asking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [\"What is the ADA?\", \"Tell me about accessibility laws in Canada\", \"How many people globally have disabilities?\", \"What does the document say about transportation?\"].map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => trySampleQuestion(question),\n                children: [\"\\\"\", question, \"\\\"\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-role\",\n              children: message.role === 'user' ? '👤 You' : '🤖 Assistant'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant-message loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-role\",\n              children: \"\\uD83E\\uDD16 Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: \"typing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask a question about accessible travel...\",\n            disabled: isLoading || !isConnected,\n            rows: 1,\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            disabled: !inputValue.trim() || isLoading || !isConnected,\n            className: \"send-button\",\n            children: isLoading ? '⏳' : '📤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-hint\",\n          children: [\"Press Enter to send, Shift+Enter for new line\", !isConnected && ' • Backend connection lost']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"coMhpuFiwvI+BiD1D923XnhWY3c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","conversationId","Math","random","toString","substring","isConnected","setIsConnected","messagesEndRef","currentEventSourceRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","close","addMessage","content","role","newMessage","id","timestamp","Date","prev","updateLastMessage","newMessages","length","handleSendMessage","trim","userMessage","_response$body","response","fetch","method","headers","body","JSON","stringify","message","conversation_id","ok","Error","status","reader","getReader","assistantMessageId","accumulatedContent","decoder","TextDecoder","done","value","read","chunk","decode","stream","lines","split","line","startsWith","data","parse","slice","type","parseError","console","error","releaseLock","handleKeyPress","e","key","shiftKey","preventDefault","clearConversation","warn","trySampleQuestion","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","index","toLocaleTimeString","ref","onChange","target","onKeyPress","placeholder","rows","_c","$RefreshReg$"],"sources":["/Users/willfernandez/pdf-chat-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\ninterface Message {\n  id: string;\n  content: string;\n  role: 'user' | 'assistant';\n  timestamp: Date;\n}\n\ninterface StreamResponse {\n  type: 'content' | 'error' | 'done';\n  content?: string;\n  conversation_id?: string;\n  message_id?: string;\n}\n\nconst App: React.FC = () => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversationId] = useState(() => \n    Math.random().toString(36).substring(2, 15)\n  );\n  const [isConnected, setIsConnected] = useState(true);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const currentEventSourceRef = useRef<EventSource | null>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (currentEventSourceRef.current) {\n        currentEventSourceRef.current.close();\n      }\n    };\n  }, []);\n\n  const addMessage = (content: string, role: 'user' | 'assistant') => {\n    const newMessage: Message = {\n      id: Math.random().toString(36).substring(2, 15),\n      content,\n      role,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    return newMessage.id;\n  };\n\n  const updateLastMessage = (content: string) => {\n    setMessages(prev => {\n      const newMessages = [...prev];\n      if (newMessages.length > 0) {\n        newMessages[newMessages.length - 1] = {\n          ...newMessages[newMessages.length - 1],\n          content\n        };\n      }\n      return newMessages;\n    });\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n  \n    const userMessage = inputValue.trim();\n    setInputValue('');\n    setIsLoading(true);\n  \n    addMessage(userMessage, 'user');\n  \n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          conversation_id: conversationId\n        })\n      });\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n  \n      const reader = response.body?.getReader();\n      if (!reader) {\n        throw new Error('No response body reader available');\n      }\n  \n      let assistantMessageId: string | null = null;\n      let accumulatedContent = '';\n      const decoder = new TextDecoder();\n  \n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          \n          if (done) {\n            setIsLoading(false);\n            break;\n          }\n  \n          const chunk = decoder.decode(value, { stream: true });\n          const lines = chunk.split('\\n');\n  \n          for (const line of lines) {\n            if (line.startsWith('data: ')) {\n              try {\n                const data = JSON.parse(line.slice(6));\n                \n                if (data.type === 'content' && data.content) {\n                  accumulatedContent += data.content;\n                  \n                  if (!assistantMessageId) {\n                    assistantMessageId = addMessage(accumulatedContent, 'assistant');\n                  } else {\n                    updateLastMessage(accumulatedContent);\n                  }\n                } else if (data.type === 'done') {\n                  setIsLoading(false);\n                  return;\n                }\n              } catch (parseError) {\n                console.error('Error parsing SSE data:', parseError);\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n  \n    } catch (error) {\n      console.error('Error sending message:', error);\n      addMessage('Sorry, I encountered a connection error.', 'assistant');\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const clearConversation = async () => {\n    try {\n      // Call backend to clear conversation\n      await fetch(`http://localhost:8000/api/conversations/${conversationId}`, {\n        method: 'DELETE'\n      });\n    } catch (error) {\n      console.warn('Failed to clear conversation on backend:', error);\n    }\n    \n    setMessages([]);\n  };\n\n  const trySampleQuestion = (question: string) => {\n    setInputValue(question);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>PDF Chat Assistant</h1>\n        <p>Ask questions about accessible travel laws and regulations</p>\n        <div className=\"header-controls\">\n          <span className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? '🟢 Connected' : '🔴 Disconnected'}\n          </span>\n          <button \n            onClick={clearConversation}\n            className=\"clear-button\"\n            disabled={messages.length === 0}\n          >\n            Clear Chat\n          </button>\n        </div>\n      </header>\n\n      <main className=\"chat-container\">\n        <div className=\"messages-container\">\n          {messages.length === 0 ? (\n            <div className=\"welcome-message\">\n              <h2>👋 Welcome!</h2>\n              <p>I'm here to answer questions about accessible travel laws and regulations based on the loaded PDF document.</p>\n              <div className=\"sample-questions\">\n                <p><strong>Try asking:</strong></p>\n                <ul>\n                  {[\n                    \"What is the ADA?\",\n                    \"Tell me about accessibility laws in Canada\",\n                    \"How many people globally have disabilities?\",\n                    \"What does the document say about transportation?\"\n                  ].map((question, index) => (\n                    <li key={index} onClick={() => trySampleQuestion(question)}>\n                      \"{question}\"\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ) : (\n            messages.map((message) => (\n              <div\n                key={message.id}\n                className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}\n              >\n                <div className=\"message-header\">\n                  <span className=\"message-role\">\n                    {message.role === 'user' ? '👤 You' : '🤖 Assistant'}\n                  </span>\n                  <span className=\"message-time\">\n                    {message.timestamp.toLocaleTimeString()}\n                  </span>\n                </div>\n                <div className=\"message-content\">\n                  {message.content}\n                </div>\n              </div>\n            ))\n          )}\n          \n          {isLoading && (\n            <div className=\"message assistant-message loading\">\n              <div className=\"message-header\">\n                <span className=\"message-role\">🤖 Assistant</span>\n                <span className=\"message-time\">typing...</span>\n              </div>\n              <div className=\"message-content\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n\n        <div className=\"input-container\">\n          <div className=\"input-wrapper\">\n            <textarea\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Ask a question about accessible travel...\"\n              disabled={isLoading || !isConnected}\n              rows={1}\n              className=\"message-input\"\n            />\n            <button\n              onClick={handleSendMessage}\n              disabled={!inputValue.trim() || isLoading || !isConnected}\n              className=\"send-button\"\n            >\n              {isLoading ? '⏳' : '📤'}\n            </button>\n          </div>\n          <div className=\"input-hint\">\n            Press Enter to send, Shift+Enter for new line\n            {!isConnected && ' • Backend connection lost'}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}